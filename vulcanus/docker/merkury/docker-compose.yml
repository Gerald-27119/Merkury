version: '3.8'

services:
  postgres-db:
    container_name: postgres-db
    image: postgres:latest
    env_file:
      - ./postgres/postgres.env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  mongo-db:
    container_name: mongo-db
    build:
      context: ./mongo
      dockerfile: Dockerfile
    env_file:
      - ./mongo/mongo.env
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  redis:
    container_name: redis
    image: redis:latest
    ports:
      - "6379:6379"

  spring-boot-app:
    build:
      context: ./spring-boot-app
      dockerfile: Dockerfile
    depends_on:
      - postgres-db
      - mongo-db
      - redis
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-db:5432/dev_postgres_db
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_DATA_MONGODB_URI: mongodb://user:password@mongo-db:27017/dev_mongo_db
      SPRING_DATA_MONGODB_DATABASE: dev_mongo_db
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
    ports:
      - "8081:8081"

  prometheus:
    build:
      context: ./prometheus
      dockerfile: Dockerfile
    ports:
      - "9090:9090"
    depends_on:
      - spring-boot-app

  grafana:
    build:
      context: ./grafana
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - prometheus

  locust:
    build:
      context: ./locust
      dockerfile: Dockerfile
    depends_on:
      - postgres-db
    environment:
      POSTGRES_HOST: postgres-db
      POSTGRES_DB: dev_postgres_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "8089:8089"
    command: >
      -f /mnt/locust/user_traffic.py
      --host=http://host.docker.internal:8080

volumes:
  postgres_data:
  mongo_data:
